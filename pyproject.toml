[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "uor-evolution-mcp-server"
version = "1.0.0"
description = "Model Context Protocol server for UOR Evolution consciousness system"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "UOR Evolution Team", email = "team@uor-evolution.org"}
]
keywords = ["mcp", "consciousness", "ai", "virtual-machine", "cosmic-intelligence"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    # Core MCP dependencies
    "mcp>=1.0.0",
    "pydantic>=2.0.0",
    "anyio>=4.0.0",
    
    # UOR Evolution core dependencies
    "flask>=2.3.0",
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "sympy>=1.12",
    "networkx>=3.1",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "dataclasses-json>=0.6.0",
    "colorlog>=6.7.0",
    "asyncio-mqtt>=0.13.0",
    
    # MCP server specific dependencies
    "orjson>=3.9.0",
    "structlog>=23.1.0",
    "typing-extensions>=4.7.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "unittest-xml-reporting>=3.2.0",
]

[project.urls]
Homepage = "https://github.com/uor-evolution/uor-evolution"
Documentation = "https://github.com/uor-evolution/uor-evolution/blob/main/README.md"
Repository = "https://github.com/uor-evolution/uor-evolution"
Issues = "https://github.com/uor-evolution/uor-evolution/issues"

[project.scripts]
uor-evolution-mcp = "mcp_server.server:main"
uor-mcp-server = "mcp_server.server:main"

[tool.setuptools]
packages = ["mcp_server", "mcp_server.tools", "mcp_server.resources"]

[tool.setuptools.package-data]
mcp_server = ["*.yaml", "*.yml", "*.json"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "unified_api.*",
    "backend.*",
    "core.*",
    "modules.*",
    "consciousness.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["mcp_server"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
